=========================================
#백준 풀이법

1. 문제 요약 (입력, 출력, 함수, 변수, 흐름)
2. 코딩은 빈페이지부터 시작
3. 제출 하기 전 여러 테스트 케이스로 검사
=========================================
#[C++에서 for문 속도향상을 위한 코드]

ios_base::sync_with_stdio(false);
cin.tie(NULL);

endl 보다는 \n 권장 
=========================================
while (getline(cin,strTemp))
다음 라인입력 종료 체크 유용
=========================================
[c++ 동적할당]

(new로 메모리 할당)
type_name *variable_name = new type_name;
(배열일 경우)
type_name *variable_name = new type_name[SIZE];

(delete로 메모리 해제)
delete variable_name;
(배열일 경우)
delete [] variable_name;
=========================================
레퍼런스 vs 포인터(C++ p.504)
일단 가리키는 대상을 바꿀 수 있어야 한다. 
(ex: iterator, linked list 등) 그러면 포인터

가리키는 대상이 절대 변하지 않는다. 변하면 안된다.
(ex: 함수에 결과 값을 저장하는 변수를 전달할 때, 
해당 객체를 변경없이 참조만 할 때) 그러면 레퍼런스
(구조체나 클래스처럼 덩치 큰 데이터)
=========================================
매크로함수 <<<<<< 인라인 함수 (p.470)
=========================================
소수점 출력 자리 설정
cout<<fixed;
cout.precision(number);
=========================================
cin 사용후 엔터(입력버퍼) 지우기
cin.get();
=========================================
상용로그를 이용한 자릿수 구하기
log10(Num)+1 = Num의 자릿수
=========================================

static 멤버 함수 : 객체가 생성되어있지 않아도 사용 가능

=============================================================

두 문자열을 하나로 결합하는 +연산자 오버로딩

문자열에 있는 모든 영문자를 소문자로 
변환하는 StringLow()멤버함수

문자열에 있는 모든 영문자를 대문자로 
변환하는 StringUp()멤버함수

char 매개변수를 사용하여, 그 문자열에
주어진 매개변수가 출현하는 횟수를 리턴하는 멤버함수


=============================================================

// 벡터 for 문
vector <int> vec;

for (vector<int>::iterator it = vec.begin(); it != vec.end(); it++)
{
	cout << *it 
}

for_each(vec.begin(), vec.end(), 함수포인터)



=============================================================


Q1. 용량이 큰 파일을 작은 용량으로 분할해서 작은 단위의 파일로
	나누는 유틸리트 프로그램을 작성하라.

	사용자로부터 소스파일명을 입력받은 후,
	각각 분할 된 작은 파일의 바이트 값을 입력받아야 한다.

	ex. Enter the FileName : test.zip
		Enter the FileSize : 1024

		=> File test.zip.01
		=> File test.zip.02
		........
		Split Done.


	=> 





Q2. 사용자로부터 소스 파일의 개수, 소스 파일의 이름, 목적파일의 이름을
	입력 받아 새로운 하나의 파일로 파일들을 조합하는 프로그램을 작성하라.
	
	ex. Enter the FileNumber : 2
		Enter the SourceFile : test.zip.01
		Enter the SourceFile : test.zip.02
		Enter the TargetFile : test.zip
		.........
		Combine Done.



		========================================




합칠 파일의 갯수
합칠 파일의 이름 (갯수만큼)

생성할 파일의 이름 



=======================================





Quick Sorting


1. 피벗(중앙)을 기준으로 맨 왼쪽, 맨오른쪽을 피벗과 비교











#1 피벗값 기준 이하, 이상 그룹 나눔

        *
5 7 1 4 6 2 3 9 8

  &     *   &
5 7 1 4 6 2 3 9 8

5 3 1 4 6 2 7 9 8

	    * &
5 3 1 4 6 2 7 9 8

5 3 1 4 2 6 7 9 8














pl / x / pr

a[pl] >= x 가 성립하는 요소를 찾을 때까지 pl을 오른쪽으로 옮김
a[pr] <= x 가 성립하는 요소를 찾을 때까지 pr을 왼쪽으로 옮김




















====================================================
오늘 알고리즘 수업

Hip Sort

이진트리 구조로 생성


힙 맞춤 -> 첫 노드 맨뒤로, 끝 노드 첫노드로 -> 힙 맞춤

https://www.youtube.com/watch?v=nms-xZlnHlM





0 1 2 3 4 5 6 7 8



